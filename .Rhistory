# Load required libraries
library(rnaturalearth)
library(rnaturalearthdata)
library(ggplot2)
library(sf)
library(ggrepel)
library(readxl)
library(dplyr)
setwd(".")
setwd("~/Desktop/RABIOS")
# Load required libraries
library(rnaturalearth)
library(rnaturalearthdata)
library(ggplot2)
library(sf)
library(ggrepel)
library(readxl)
library(dplyr)
# Cargar las librerías necesarias
library(ggplot2)
library(maps)
library(dplyr)
library(sf)
library(ggspatial)
# Replace 'your_excel_file.xlsx' with the actual file path
excel_file <- read_excel("Emergencia-2023-2-autumn.xlsx")
emergencia <- read_csv("Emergencia-2023-1-autumn - pretormenta.csv")
library(tidyverse)
library(plyr)
library(viridis)
library(viridisLite)
library(car)
library(carData)
library(patchwork)
emergencia <- read_csv("Emergencia-2023-1-autumn - pretormenta.csv")
emergencia <- emergencia %>%
mutate(SubjID = row_number()) %>%
select(SubjID, everything())
str(emergencia)
# Transformar los datos para tener los valores de germinación en formato tidy
germinacion_transformada <- emergencia %>%
gather(dia, germ, D1:D19) %>%
mutate(dia = as.numeric(str_replace(dia, "D", "")))
head(germinacion_transformada)
# Nuevos nombres para el DataFrame y las columnas
nuevo_nombre_df <- "germ_otono_2023_1"
nuevos_nombres_columnas <- c("ID", "Ecotipo", "TRAT", "Bloque_Rep"
, "Siembra", "N_seeds", "prop", "dia", "germ")
# Cambiar los nombres del DataFrame y las columnas
germ_otono_2023_1 <- germinacion_transformada %>%
rename_with(~ if_else(. %in% names(germinacion_transformada), nuevos_nombres_columnas[match(., names(germinacion_transformada))], .))
# Verificar los cambios en el nuevo DataFrame
print(germ_otono_2023_1)
# trabajo sobre el data frame indicando la clase de cada variable
germ_otono_2023_1$Ecotipo <- as.factor(germ_otono_2023_1$Ecotipo)
germ_otono_2023_1$Ecotipo <- factor(germ_otono_2023_1$Ecotipo
, levels = c("Wa-1","Ra-0"
,"Sha","Ler-0"
,"Oy-0","Cvi-0"
,"Tu-0","Ws-0"
,"Cen-0","Ömö2-1"))
germ_otono_2023_1$TRAT <- as.factor(germ_otono_2023_1$TRAT)
str(germ_otono_2023_1)
emergencia1 <- ddply(germ_otono_2023_1, c("Ecotipo", "TRAT"), summarize,
pm = mean(prop, na.rm=T),
se = sd(prop, na.rm=T))
View(emergencia1)
cvemergencia1 <- ddply(emergencia1, c("Ecotipo", "TRAT"), summarize,
cvprop = se/pm)
View(cvemergencia1)
library(reshape)
wcvATp18<- reshape(cvemergencia1, timevar= "Ecotipo", idvar= "TRAT", direction= "wide")
View(wcvATp18)
colnames(wcvATp18)<- c("TRAT","Wa","Ra", "Sha", "Ler", "Oy", "Cvi", "Tu", "Ws", "Cen", "Omo")
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=3,
pcol=cbPalette,
plwd=3,
plty=1)
#ESTE NO USE
library(fmsb)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=3,
pcol=cbPalette,
plwd=3,
plty=1)
data("cbPalette")
library(ggplot2)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=3,
pcol=cbPalette,
plwd=3,
plty=1)
library(colorspace)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=3,
pcol=cbPalette,
plwd=3,
plty=1)
library(viridis)
library(viridisLite)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=3,
pcol=cbPalette,
plwd=3,
plty=1)
library(RColorBrewer)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=3,
pcol=cbPalette,
plwd=3,
plty=1)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00","#CC79A7")
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=3,
pcol=cbPalette,
plwd=3,
plty=1)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=4,
pcol=cbPalette,
plwd=4,
plty=1)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=10,
pcol=cbPalette,
plwd=10,
plty=1)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=5,
pcol=cbPalette,
plwd=5,
plty=1)
wcvATp18[1]<- NULL
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=5,
pcol=cbPalette,
plwd=5,
plty=1)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
cglwd=1,
pcol=cbPalette,
plwd=1,
plty=1)
radarchart(wcvATp18,
cglty=1,
cglcol="grey",
pcol=cbPalette,
plty=1)
radarchart(wcvATp18,
cglcol="grey",
pcol=cbPalette,
)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00","#CC79A7", "#001422", "#008045")
radarchart(wcvATp18,
cglcol="grey",
pcol=cbPalette,
)
